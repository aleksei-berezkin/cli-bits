#!/usr/bin/env node

/*
 * getLine index [endIndex]
 * 
 * Outputs a selected line or a range of lines from the input stream.
 * Positive indices are one-based.
 * Negative indices are -1-based and count from the last line.
 * endIndex is inclusive.
 * Trailing newlines are dropped.
 * 
 * Example: `ls -a | getLine 1 2` outputs `.` and `..`
 */

import { readInputLines } from '../util/readInputLines.mjs'

const startOneBasedIndex = Number(process.argv[2])
const endOneBasedIndex = process.argv[3] && Number(process.argv[3])

if (startOneBasedIndex === 0 || endOneBasedIndex === 0) {
  console.error('Index is 1-based')
  process.exit(1)
}

const lines = readInputLines()

const startIndex = startOneBasedIndex > 0 ? startOneBasedIndex - 1 : lines.length + startOneBasedIndex
const endIndex = endOneBasedIndex == null ? startIndex + 1
  : endOneBasedIndex > 0 ? endOneBasedIndex
  : lines.length + 1 + endOneBasedIndex

lines.slice(startIndex, endIndex).forEach(c => console.log(c))
